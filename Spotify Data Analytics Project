# For this project, I downloaded Spotify data from Kaggle.
# Then I added this table that was pre-set to insert the data into a database to import the Spotify data I downloaded

CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
song_key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
song_mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness decimal(8,7) NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL )

# After importing the Spotify data into this table I began answering certain questions.

# What is the average danceability by artist and track?
SELECT artist_name, track_name, AVG(danceability)
FROM BIT_DB.Spotifydata
GROUP BY artist_name, track_name;

# Who are the top 10 artists based on popularity?
SELECT artist_name, SUM(popularity) AS total_popularity
FROM BIT_DB.Spotifydata
GROUP BY artist_name
ORDER BY total_popularity desc
LIMIT 10;

# Here is a practice with CTE:
# Calculate the average popularity for the artists in the Spotify data table. 
# Then, for every artist with an average popularity of 90 or above, show their name, their average popularity, and label them as a “Top Star”.
WITH tempTABLE AS (
    SELECT s.artist_name, AVG(s.popularity) AS avg_pop
    FROM Spotifydata AS s
    GROUP BY s.artist_name
)
Select artist_name, avg_pop, 'Top Star' AS tag
FROM tempTABLE
WHERE avg_pop >= 90;
