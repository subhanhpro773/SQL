# 1. Show Customers (their full names, customer ID, and country) who are not in the US. (Hint: != or <> can be used to say "is not equal to").
SELECT CustomerId, FirstName, LastName, Country
FROM customers
WHERE Country <> 'USA';

# 2. Show only the Customers from Brazil.
SELECT * 
FROM customers
WHERE Country = 'Brazil';

# 3. Find the Invoices of customers who are from Brazil. The resulting table should show the customer's full name, Invoice ID, Date of the invoice, and billing country.
SELECT invoices.InvoiceId, customers.FirstName, customers.LastName, invoices.InvoiceDate, invoices.BillingCountry
FROM customers
LEFT JOIN invoices
ON customers.CustomerId = invoices.CustomerId
WHERE customers.Country = 'Brazil';

# 4. Show the Employees who are Sales Agents.
SELECT *
FROM employees
WHERE Title = 'Sales Support Agent';

# 5. Find a unique/distinct list of billing countries from the Invoice table.
SELECT DISTINCT BillingCountry
FROM invoices;

# 6. Provide a query that shows the invoices associated with each sales agent. The resulting table should include the Sales Agent's full name.
SELECT invoices.InvoiceId, employees.FirstName, employees.LastName
FROM employees
JOIN customers 
ON customers.SupportRepId = employees.EmployeeId
JOIN invoices 
ON invoices.CustomerId = customers.CustomerId;

# 7. Show the Invoice Total, Customer name, Country, and Sales Agent name for all invoices and customers.
SELECT invoices.Total, customers.FirstName, customers.LastName, customers.Country, employees.FirstName, employees.LastName
FROM employees
JOIN customers 
ON customers.SupportRepId = employees.EmployeeId
JOIN invoices 
ON invoices.CustomerId = customers.CustomerId;

# 8. How many Invoices were there in 2009?
SELECT COUNT(InvoiceId)
FROM invoices
WHERE InvoiceDate LIKE '%2009%';
# Or
SELECT COUNT(*)
FROM invoices
WHERE InvoiceDate BETWEEN '2009-01-01' AND '2009-12-31';

# 9. What are the total sales for 2009?
SELECT ROUND(SUM(Total), 2) AS Total
FROM invoices
WHERE InvoiceDate LIKE '%2009%';
# Or;
SELECT ROUND(SUM(Total), 2) AS Total
FROM invoices
WHERE InvoiceDate BETWEEN '2009-01-01' AND '2009-12-31';

# 10. Write a query that includes the purchased track name with each invoice line ID.
SELECT invoice_items.InvoiceLineId, tracks.Name
FROM invoice_items
JOIN tracks
ON invoice_items.TrackId = tracks.TrackId;

# 11. Write a query that includes the purchased track name AND artist name with each invoice line ID.
SELECT invoice_items.InvoiceLineId, tracks.Name AS Track, artists.Name AS Artist
FROM invoice_items
LEFT JOIN tracks
ON invoice_items.TrackId = tracks.TrackId
INNER JOIN albums
ON tracks.AlbumId = albums.AlbumId
LEFT JOIN artists 
ON artists.ArtistId = albums.AlbumId;

# 12. Provide a query that shows all the Tracks, and include the Album name, Media type, and Genre.
SELECT tracks.Name AS Track, albums.Title AS Album, media_types.Name AS Media, genres.Name AS Genre
FROM tracks
LEFT JOIN albums
ON tracks.AlbumId = albums.AlbumId
LEFT JOIN media_types
ON tracks.MediaTypeId = media_types.MediaTypeId
LEFT JOIN genres
ON tracks.GenreId = genres.GenreId;

13. Show the total sales made by each sales agent.
SELECT employees.FirstName, employees.LastName, ROUND(SUM(invoices.Total), 2) AS Total
FROM employees
JOIN customers
ON employees.EmployeeId = customers.SupportRepId
JOIN invoices
ON invoices.CustomerId = customers.CustomerId
GROUP BY employees.LastName;

# 14. Which sales agent made the most dollars in sales in 2009?
SELECT employees.FirstName, employees.LastName, ROUND(SUM(invoices.Total), 2) AS Total
FROM employees
JOIN customers
ON employees.EmployeeId = customers.SupportRepId
JOIN invoices
ON invoices.CustomerId = customers.CustomerId
WHERE invoices.InvoiceDate LIKE '%2009%'
GROUP BY employees.LastName
ORDER BY Total DESC
LIMIT 1;
